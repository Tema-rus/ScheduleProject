# Generated by Django 5.1.4 on 2025-10-30 13:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=60, verbose_name='Название института')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Институт',
                'verbose_name_plural': 'Институты',
                'ordering': ['institute_name'],
            },
        ),
        migrations.CreateModel(
            name='LessonType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Тип занятия')),
            ],
            options={
                'verbose_name': 'Тип занятия',
                'verbose_name_plural': 'Типы занятий',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=150, verbose_name='Название предмета')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
                'ordering': ['subject_name'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_name', models.CharField(max_length=60, verbose_name='Имя преподавателя')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
                'ordering': ['teacher_name'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Время начала')),
                ('end_time', models.TimeField(verbose_name='Время окончания')),
            ],
            options={
                'verbose_name': 'Время',
                'verbose_name_plural': 'Время занятий',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=20, verbose_name='Название группы')),
                ('start_year', models.PositiveIntegerField(default=2025, verbose_name='Год начала')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Слаг')),
                ('institute', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='schedule.institute', verbose_name='Институт')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['institute', 'group_name'],
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, verbose_name='Номер аудитории')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.institute', verbose_name='Институт')),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
                'ordering': ['institute', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Понедельник', 'Понедельник'), ('Вторник', 'Вторник'), ('Среда', 'Среда'), ('Четверг', 'Четверг'), ('Пятница', 'Пятница'), ('Суббота', 'Суббота')], max_length=15, verbose_name='День недели')),
                ('week_type', models.CharField(choices=[('even', 'Чётная'), ('odd', 'Нечётная')], max_length=10, verbose_name='Тип недели')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.classroom', verbose_name='Аудитория')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.group', verbose_name='Группа')),
                ('lesson_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.lessontype', verbose_name='Тип занятия')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.subject', verbose_name='Предмет')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.teacher', verbose_name='Преподаватель')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.timeslot', verbose_name='Время занятий')),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
                'ordering': ['day_of_week', 'week_type', 'time_slot'],
                'constraints': [models.UniqueConstraint(fields=('day_of_week', 'week_type', 'time_slot', 'classroom', 'group'), name='unique_schedule_constraint')],
            },
        ),
    ]
